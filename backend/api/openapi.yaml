openapi: '3.0.3'

info:
  version: 0.1.0
  title: Perfect Gift Backend

servers:
  - url: http://localhost:3010

paths:
  /v0/giftuser:
    get:
      description: Returns all users
      parameters:
      - name: username
        in: query
        required: false
        description: User's username
        schema:
          type: string
      responses:
        200:
          description: User response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: Unknown user
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v0/getqresponse:
    get:
      description: Return user's questionnaire responses
      parameters:
      - name: username
        in: query
        required: false
        description: User's username
        schema:
          type: string
      responses:
        200:
          description: User response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireResponses'
        404:
          description: Unknown user
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v0/postqresponse:
      post:
        description: Post user's questionnaire responses from Create Account page
        parameters:
        - name: username
          in: query
          required: false
          description: User's username
          schema:
            type: string
        responses:
          200:
            description: Stored questionnaire responses
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/QuestionnaireResponses'
          404:
            description: Unable to store questionnaire responses
          default:
            description: Unexpected Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /v0/authenticate:
    post:
      description: Authenticate user given username and password
      parameters:
      - name: username
        in: query
        required: false
        description: User's username
        schema:
          type: string
      - name: password
        in: query
        required: false
        description: User's password
        schema:
          type: string
      responses:
        200:
          description: User response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: Unable to authenticate
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      description: Check if user is logged in
      parameters:
      - name: username
        in: query
        required: false
        description: User's username
        schema:
          type: string
      - name: password
        in: query
        required: false
        description: User's password
        schema:
          type: string
      responses:
        200:
          description: User response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: Unable to authenticate
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    User:
      description: A user and its data
      type: array
      items:
        type: object
        properties:
          username:
            type: string
          userpassword:
            type: string
          firstname:
            type: string
          lastname:
            type: string
          useremail:
            type: string
            format: email
          avatar:
            type: string
          showavatar:
            type: boolean
        required:
          - username
          - firstname
          - lastname
          - useremail

    QuestionnaireResponses:
      description: User's responses to interest questionnaire
      type: array
      items:
        type: object
        properties:
          username:
            type: string
          outdooractivity:
            type: string
          place:
            type: string
          store:
            type: string
          musicgenre:
            type: string
          musician:
            type: string
          band:
            type: string
          indooractivity:
            type: string
          movietvshow:
            type: string
          videogame:
            type: string
          sport:
            type: string
          sportsteam:
            type: string
          exercise:
            type: string
        required:
          - username