openapi: "3.0.3"

info:
  version: 0.1.0
  title: Perfect Gift Backend

servers:
  - url: http://localhost:3010

paths:
  /v0/deleteItem:
    delete:
      description: Deletes an item from the wishlist
      parameters:
        - name: username
          in: query
          required: false
          description: User's username
          schema:
            type: string
        - name: item
          in: query
          required: false
          description: User's wishlist gift item
          schema:
            type: string
      responses:
        200:
          description: User response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WishlistDelete"
        404:
          description: Unknown user
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v0/giftuser:
    get:
      description: Returns all users
      parameters:
        - name: username
          in: query
          required: false
          description: User's username
          schema:
            type: string
        - name: useremail
          in: query
          required: false
          description: User's useremail
          schema:
            type: string
      responses:
        200:
          description: User response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WishlistDelete"
        404:
          description: Unknown user
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v0/postuser:
    post:
      description: Post user's data from Create Account page
      requestBody:
        required: true
        description: User's information
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        201:
          description: Stored user data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        404:
          description: Unable to store user data
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v0/giftuser/{username}:
    put:
      description: Updates a username
      parameters:
        - in: path
          name: username
          description: User's username
          required: true
          schema:
            type: string
      requestBody:
        description: Update a username that was changed
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        204:
          description: Username updated
        409:
          description: Username was not updated and saved
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v0/getqresponse/{username}:
    get:
      description: Return user's questionnaire responses
      parameters:
        - name: username
          in: path
          required: true
          description: Username of user that we need questionnaire responses for
          schema:
            type: string
      responses:
        200:
          description: User response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuestionnaireResponses"
        404:
          description: Unknown user
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v0/postqresponse:
    post:
      description: Post user's questionnaire responses from Create Account page
      requestBody:
        required: true
        description: User's username
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuestionnaireResponses"
      responses:
        201:
          description: Stored questionnaire responses
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuestionnaireResponses"
        404:
          description: Unable to store questionnaire responses
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v0/putqresponse/{username}:
    put:
      description: Updates changed questionnaire responses
      parameters:
        - in: path
          name: username
          description: User's unique username
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuestionnaireResponses"
      responses:
        200:
          description: Questionnaire responses/interests updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuestionnaireResponses"
        409:
          description: Questionnaire responses/interests were not updated and saved
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v0/removeqresponse/{username}/{questionnairetopic}:
    put:
      description: Removes chosen questionnaire response on Profile page
      parameters:
      - in: path
        name: username
        description: User's unique username
        required: true
        schema:
          type: string
      - in: path
        name: questionnairetopic
        description: Name of column in questionnaire table to "remove"
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionnaireResponses'
      responses:
        200:
          description: Questionnaire response/interest removed
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/QuestionnaireResponses'
        409:
          description: Questionnaire response/interest was not removed
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v0/authenticate:
    post:
      description: Authenticate user given username and password
      parameters:
        - name: username
          in: query
          required: false
          description: User's username
          schema:
            type: string
        - name: password
          in: query
          required: false
          description: User's password
          schema:
            type: string
      responses:
        200:
          description: User response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        404:
          description: Unable to authenticate
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      description: Check if user is logged in
      parameters:
        - name: username
          in: query
          required: false
          description: User's username
          schema:
            type: string
        - name: password
          in: query
          required: false
          description: User's password
          schema:
            type: string
      responses:
        200:
          description: User response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        404:
          description: Unable to authenticate
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v0/logout:
    get:
      description: Logs out a user when the button ("Sign out") is clicked
      parameters:
        - name: signOut
          in: query
          required: false
          description: Boolean value to see if user is logged in or out
          schema:
            type: boolean
      responses:
        200:
          description: Logged out
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        404:
          description: Unable to logout
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v0/getwishlist/{username}:
    get:
      description: Return user's questionnaire responses
      parameters:
        - name: username
          in: path
          required: true
          description: Username of user that we need wishlist for
          schema:
            type: string
      responses:
        200:
          description: User response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuestionnaireResponses"
        404:
          description: Unknown user
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # /v0/:
  #   get:
  #     description: Return a user's wishlist
  #     parameters:
  #     - name: username
  #       in: query
  #       required: false
  #       description: User's username
  #       schema:
  #         type: string
  #     - name: wishlist
  #       in: query
  #       required: false
  #       description: User's username
  #       schema:
  #         type: array
  #     responses:
  #       200:
  #         description: User response
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/QuestionnaireResponses'
  #       404:
  #         description: Unknown user
  #       default:
  #         description: Unexpected Error
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'

  /v0/giftapi/{searchby}:
    get:
      description: Return a user's gift suggestion based on what they typed
      parameters:
        - name: searchby
          in: path
          description: Method for searching gifts (either "searchgift" or "searchusername")
          required: true
          schema:
            type: string
        - name: value
          in: query
          required: false
          description: User's username
          schema:
            type: string
        - name: placeholderText
          in: query
          required: false
          description: User's placeholder
          schema:
            type: string
        - name: typedInput
          in: query
          required: false
          description: User's input
          schema:
            type: string
        - name: user
          in: query
          required: false
          description: User's input
          schema:
            type: string
        - name: searchTopics
          in: query
          required: false
          description: Topics to search for in eBay Shopping API
          schema:
            type: array
      responses:
        200:
          description: User response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInput"
        404:
          description: Unknown user
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v0/storeWLGift:
    post:
      description: Stores the typed user's wishlist gift.
      parameters:
        - name: WLGiftToStore
          in: query
          required: false
          description: User's password
          schema:
            type: string
      responses:
        201:
          description: Stored user wishlist gift
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Wishlist"
        404:
          description: Unable to store user wishlist gift
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    User:
      description: A user and its data
      type: array
      items:
        type: object
        properties:
          username:
            type: string
          userpassword:
            type: string
          firstname:
            type: string
          lastname:
            type: string
          useremail:
            type: string
            format: email
          avatar:
            type: string
          showavatar:
            type: boolean
        required:
          - username
          - firstname
          - lastname
          - useremail

    QuestionnaireResponses:
      description: User's responses to interest questionnaire
      type: array
      items:
        type: object
        properties:
          username:
            type: string
          outdooractivity:
            type: string
          place:
            type: string
          store:
            type: string
          musicgenre:
            type: string
          musician:
            type: string
          band:
            type: string
          indooractivity:
            type: string
          movietvshow:
            type: string
          videogame:
            type: string
          sport:
            type: string
          sportsteam:
            type: string
          exercise:
            type: string
        required:
          - username

    Wishlist:
      description: User's wishlist
      type: array
      items:
        type: object
        properties:
          WLGiftToStore:
            type: string

    WishlistDelete:
      description: User's responses to interest questionnaire
      type: array
      items:
        type: object
        properties:
          username:
            type: string
          item:
            type: string

    UserInput:
      description: User's input to search bar
      type: array
      items:
        type: object
        properties:
          value:
            type: string
          placeholderText:
            type: string
          typedInput:
            type: string
          user:
            type: string
          searchTopics:
            type: array
          searchby:
            type: string
        required:
          - searchby
          - typedInput
