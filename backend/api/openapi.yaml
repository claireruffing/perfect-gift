openapi: '3.0.3'

info:
  version: 0.1.0
  title: Perfect Gift Backend

servers:
  - url: http://localhost:3010

paths:
  /v0/giftuser:
    get:
      description: Returns all users
      parameters:
      - name: username
        in: query
        required: false
        description: User's username
        schema:
          type: string
      responses:
        200:
          description: User response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: Unknown user
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # /v0/giftuser/{useremail}:
  #   put:
  #     description: Updates a username
  #     parameters:
  #     - in: query
  #       name: username
  #       description: User's username
  #       required: false
  #       schema:
  #         type: string
  #     - in: path
  #       name: useremail
  #       description: User's email
  #       required: true
  #       schema:
  #         type: string
  #         format: email
  #     requestBody:
  #       description: Update a username that was changed
  #       required: false
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/User'
  #     responses:
  #       204:
  #         description: Username updated
  #       409:
  #         description: Username was not updated and saved
  #       default:
  #         description: Unexpected Error
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'

  /v0/getqresponse:
    get:
      description: Return user's questionnaire responses
      parameters:
      - name: username
        in: query
        required: false
        description: User's username
        schema:
          type: string
      responses:
        200:
          description: User response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireResponses'
        404:
          description: Unknown user
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v0/postqresponse:
      post:
        description: Post user's questionnaire responses from Create Account page
        requestBody:
          required: true
          description: User's username
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireResponses'
        responses:
          201:
            description: Stored questionnaire responses
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/QuestionnaireResponses'
          404:
            description: Unable to store questionnaire responses
          default:
            description: Unexpected Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /v0/putqresponse/{username}:
    put:
      description: Updates changed questionnaire responses
      parameters:
      - in: path
        name: username
        description: User's unique username
        required: true
        schema:
          type: string
      requestBody:
        description: Updates changed questionnaire responses
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionnaireResponses'
      responses:
        204:
          description: Questionnaire responses/interests updated
        409:
          description: Questionnaire responses/interests were not updated and saved
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v0/postuser:
      post:
        description: Post user's data from Create Account page
        requestBody:
          required: true
          description: User's information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        responses:
          201:
            description: Stored user data
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
          404:
            description: Unable to store user data
          default:
            description: Unexpected Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /v0/authenticate:
    post:
      description: Authenticate user given username and password
      parameters:
      - name: username
        in: query
        required: false
        description: User's username
        schema:
          type: string
      - name: password
        in: query
        required: false
        description: User's password
        schema:
          type: string
      responses:
        200:
          description: User response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: Unable to authenticate
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      description: Check if user is logged in
      parameters:
      - name: username
        in: query
        required: false
        description: User's username
        schema:
          type: string
      - name: password
        in: query
        required: false
        description: User's password
        schema:
          type: string
      responses:
        200:
          description: User response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: Unable to authenticate
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v0/logout:
    get:
      description: Logs out a user when the button ("Sign out") is clicked
      parameters:
      - name: signOut
        in: query
        required: false
        description: Boolean value to see if user is logged in or out
        schema:
          type: boolean
      responses:
        200:
          description: Logged out
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: Unable to logout
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v0/getUserWishlist:
    get:
      description: Return a user's wishlist
      parameters:
      - name: username
        in: query
        required: false
        description: User's username
        schema:
          type: string
      - name: wishlist
        in: query
        required: false
        description: User's username
        schema:
          type: array
      responses:
        200:
          description: User response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireResponses'
        404:
          description: Unknown user
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    User:
      description: A user and its data
      type: array
      items:
        type: object
        properties:
          username:
            type: string
          userpassword:
            type: string
          firstname:
            type: string
          lastname:
            type: string
          useremail:
            type: string
            format: email
          avatar:
            type: string
          showavatar:
            type: boolean
        required:
          - username
          - firstname
          - lastname
          - useremail
    
    QuestionnaireResponses:
      description: User's responses to interest questionnaire
      type: array
      items:
        type: object
        properties:
          username:
            type: string
          outdooractivity:
            type: string
          place:
            type: string
          store:
            type: string
          musicgenre:
            type: string
          musician:
            type: string
          band:
            type: string
          indooractivity:
            type: string
          movietvshow:
            type: string
          videogame:
            type: string
          sport:
            type: string
          sportsteam:
            type: string
          exercise:
            type: string
        required:
          - username

    Wishlist:
      description: User's wishlist
      type: array
      items:
        type: object
        properties:
          username:
            type: string
          gift1:
            type: string
          gift2:
            type: string
          gift3:
            type: string
          gift4:
            type: string
          gift5:
            type: string
          gift6:
            type: string
          gift7:
            type: string
          gift8:
            type: string
          gift9:
            type: string
          gift10:
            type: string
        required:
          - username